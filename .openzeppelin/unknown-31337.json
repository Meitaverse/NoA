{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
    "txHash": "0x178464ed4714868d8689062d58b2e8b66df82ffb4bc3e8e0cde742620ab42250"
  },
  "proxies": [
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x4e5235896bca69c134e21ecafafe9752702ea2ccd592e590959b0ffddbce9485",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x355ce22a1e594fdc1db1c67a43877d9ffb121818f60cc4f647869ec7a3d5b4aa",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x7a63b91e78f65fe7058140b2f4d20faa3c34c13ec48cf8cbc1c5cec1e27a8db4",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0xc6bf87be92e096349224fe4c037dcde4e7de90fc76280130b159fdce189ae9c9",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0x883e352b4b8139ceab919b827be91de9c8c5990ac90b3d78f221f86940081d51",
      "kind": "transparent"
    }
  ],
  "impls": {
    "2b29a7eb2e2eed103bc87af3d0f12d017b3e9ed0971266ef9f3b44ad582123f5": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x8a5286c8ea169fe23b1eb707ae92492103008182f09647b8ca921f49b33a0b03",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48433_storage)",
            "contract": "OZAccessControlUpgradeable",
            "src": "contracts/libraries/OZAccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "AdminRoleEnumerable",
            "src": "contracts/libraries/AdminRoleEnumerable.sol:74"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "1052",
            "type": "t_string_storage",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "1053",
            "type": "t_string_storage",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:44"
          },
          {
            "label": "_decimals",
            "offset": 0,
            "slot": "1054",
            "type": "t_uint8",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:45"
          },
          {
            "label": "_tokenIdGenerator",
            "offset": 0,
            "slot": "1055",
            "type": "t_struct(Counter)10000_storage",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:46"
          },
          {
            "label": "_approvedValues",
            "offset": 0,
            "slot": "1056",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:50"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "1057",
            "type": "t_array(t_struct(TokenData)23335_storage)dyn_storage",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:52"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "1058",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:55"
          },
          {
            "label": "_addressData",
            "offset": 0,
            "slot": "1059",
            "type": "t_mapping(t_address,t_struct(AddressData)23347_storage)",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:57"
          },
          {
            "label": "metadataDescriptor",
            "offset": 0,
            "slot": "1060",
            "type": "t_contract(IERC3525MetadataDescriptorUpgradeable)26123",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:59"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1061",
            "type": "t_array(t_uint256)41_storage",
            "contract": "ERC3525Upgradeable",
            "src": "@solvprotocol/erc-3525/contracts/ERC3525Upgradeable.sol:640"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "1102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "1103",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1104",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "1154",
            "type": "t_mapping(t_address,t_struct(Counter)10000_storage)",
            "contract": "ERC3525PermitUpgradeable",
            "src": "contracts/extensions/draft-ERC3525PermitUpgradeable.sol:27"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "1155",
            "type": "t_bytes32",
            "contract": "ERC3525PermitUpgradeable",
            "src": "contracts/extensions/draft-ERC3525PermitUpgradeable.sol:39",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC3525PermitUpgradeable",
            "src": "contracts/extensions/draft-ERC3525PermitUpgradeable.sol:109"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "1205",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC3525Votes",
            "src": "contracts/extensions/ERC3525Votes.sol:35"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "1206",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)42339_storage)dyn_storage)",
            "contract": "ERC3525Votes",
            "src": "contracts/extensions/ERC3525Votes.sol:36"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "1207",
            "type": "t_array(t_struct(Checkpoint)42339_storage)dyn_storage",
            "contract": "ERC3525Votes",
            "src": "contracts/extensions/ERC3525Votes.sol:37"
          },
          {
            "label": "total_supply",
            "offset": 0,
            "slot": "1208",
            "type": "t_uint256",
            "contract": "SBTStorage",
            "src": "contracts/storage/SBTStorage.sol:7"
          },
          {
            "label": "_sbtDetails",
            "offset": 0,
            "slot": "1209",
            "type": "t_mapping(t_uint256,t_struct(SoulBoundTokenDetail)45541_storage)",
            "contract": "SBTStorage",
            "src": "contracts/storage/SBTStorage.sol:10"
          },
          {
            "label": "_manager",
            "offset": 0,
            "slot": "1210",
            "type": "t_address",
            "contract": "SBTStorage",
            "src": "contracts/storage/SBTStorage.sol:12"
          },
          {
            "label": "_governance",
            "offset": 0,
            "slot": "1211",
            "type": "t_address",
            "contract": "SBTStorage",
            "src": "contracts/storage/SBTStorage.sol:14"
          },
          {
            "label": "_banktreasury",
            "offset": 0,
            "slot": "1212",
            "type": "t_address",
            "contract": "SBTStorage",
            "src": "contracts/storage/SBTStorage.sol:16"
          },
          {
            "label": "treasury_SBT_ID",
            "offset": 0,
            "slot": "1213",
            "type": "t_uint256",
            "contract": "NFTDerivativeProtocolTokenV1",
            "src": "contracts/NFTDerivativeProtocolTokenV1.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1214",
            "type": "t_array(t_uint256)50_storage",
            "contract": "NFTDerivativeProtocolTokenV1",
            "src": "contracts/NFTDerivativeProtocolTokenV1.sol:310"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)42339_storage)dyn_storage": {
            "label": "struct ERC3525Votes.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(TokenData)23335_storage)dyn_storage": {
            "label": "struct ERC3525Upgradeable.TokenData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]",
            "numberOfBytes": "32000"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC3525MetadataDescriptorUpgradeable)26123": {
            "label": "contract IERC3525MetadataDescriptorUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)42339_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC3525Votes.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressData)23347_storage)": {
            "label": "mapping(address => struct ERC3525Upgradeable.AddressData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)10000_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48433_storage)": {
            "label": "mapping(bytes32 => struct OZAccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SoulBoundTokenDetail)45541_storage)": {
            "label": "mapping(uint256 => struct DataTypes.SoulBoundTokenDetail)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressData)23347_storage": {
            "label": "struct ERC3525Upgradeable.AddressData",
            "members": [
              {
                "label": "ownedTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "approvals",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(AddressSet)22993_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)22678_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)42339_storage": {
            "label": "struct ERC3525Votes.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)10000_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)48433_storage": {
            "label": "struct OZAccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)22993_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)22678_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SoulBoundTokenDetail)45541_storage": {
            "label": "struct DataTypes.SoulBoundTokenDetail",
            "members": [
              {
                "label": "nickName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "imageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "locked",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(TokenData)23335_storage": {
            "label": "struct ERC3525Upgradeable.TokenData",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "approved",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "valueApprovals",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4350891c8f3f631f88c92e8c34c92023f78caabf1af406ba377e594c8096e860": {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xd568a4e138d56ab5a2f56f59d5b4b5adc32e69be91f6f36d599003f86a0b427a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IGovernorTimelockUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "label": "_proposals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)1068_storage)",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "label": "_governanceCall",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Bytes32Deque)13821_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "GovernorUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:609"
          },
          {
            "label": "_votingDelay",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:15"
          },
          {
            "label": "_votingPeriod",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:16"
          },
          {
            "label": "_proposalThreshold",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)47_storage",
            "contract": "GovernorSettingsUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:129"
          },
          {
            "label": "_proposalVotes",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_struct(ProposalVote)3638_storage)",
            "contract": "GovernorCountingSimpleUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "GovernorCountingSimpleUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol:119"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "453",
            "type": "t_contract(IVotesUpgradeable)4883",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "GovernorVotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "label": "_quorumNumerator",
            "offset": 0,
            "slot": "504",
            "type": "t_uint256",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "label": "_quorumNumeratorHistory",
            "offset": 0,
            "slot": "505",
            "type": "t_struct(History)8591_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "506",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "label": "_timelock",
            "offset": 0,
            "slot": "554",
            "type": "t_contract(TimelockControllerUpgradeable)3602",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:28"
          },
          {
            "label": "_timelockIds",
            "offset": 0,
            "slot": "555",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)48_storage",
            "contract": "GovernorTimelockControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:177"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "604",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "605",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "654",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48433_storage)",
            "contract": "OZAccessControlUpgradeable",
            "src": "contracts/libraries/OZAccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "655",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "AdminRoleEnumerable",
            "src": "contracts/libraries/AdminRoleEnumerable.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)8596_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]",
            "numberOfBytes": "32000"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IVotesUpgradeable)4883": {
            "label": "contract IVotesUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(TimelockControllerUpgradeable)3602": {
            "label": "contract TimelockControllerUpgradeable",
            "numberOfBytes": "20"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48433_storage)": {
            "label": "mapping(bytes32 => struct OZAccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)1068_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalVote)3638_storage)": {
            "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)22993_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)22678_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BlockNumber)10414_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)13821_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)8596_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)8591_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)8596_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)1068_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)10414_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)10414_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalVote)3638_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
            "members": [
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)48433_storage": {
            "label": "struct OZAccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)22993_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)22678_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5e42c737de10d03eefe53d980f33a4685884680ce01a70c2b0ec71e9762e18b1": {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xf025f07f8f296c6da7c0c6c3c71e1b73bb9ff3d419eafe23d0873ed1638b266b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "lockupDuration",
            "offset": 0,
            "slot": "51",
            "type": "t_uint256",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:10"
          },
          {
            "label": "lockupInterval",
            "offset": 0,
            "slot": "52",
            "type": "t_uint256",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:13"
          },
          {
            "label": "soulBoundTokenIdBankTreasury",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:16"
          },
          {
            "label": "sigNonces",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:18"
          },
          {
            "label": "_governance",
            "offset": 0,
            "slot": "55",
            "type": "t_address",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:20"
          },
          {
            "label": "_foundationMarket",
            "offset": 0,
            "slot": "56",
            "type": "t_address_payable",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:23"
          },
          {
            "label": "MODULE_GLOBALS",
            "offset": 0,
            "slot": "57",
            "type": "t_address",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:25"
          },
          {
            "label": "_signers",
            "offset": 0,
            "slot": "58",
            "type": "t_array(t_address)dyn_storage",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:27"
          },
          {
            "label": "_isSigner",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:29"
          },
          {
            "label": "_numConfirmationsRequired",
            "offset": 0,
            "slot": "60",
            "type": "t_uint256",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:31"
          },
          {
            "label": "_isConfirmed",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:34"
          },
          {
            "label": "_transactions",
            "offset": 0,
            "slot": "62",
            "type": "t_array(t_struct(Transaction)45760_storage)dyn_storage",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:36"
          },
          {
            "label": "_exchangePrice",
            "offset": 0,
            "slot": "63",
            "type": "t_mapping(t_address,t_struct(ExchangePrice)45733_storage)",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:38"
          },
          {
            "label": "accountToInfo",
            "offset": 0,
            "slot": "64",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(AccountInfo)46000_storage))",
            "contract": "BankTreasuryStorage",
            "src": "contracts/storage/BankTreasuryStorage.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "65",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "115",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "116",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48433_storage)",
            "contract": "OZAccessControlUpgradeable",
            "src": "contracts/libraries/OZAccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "166",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "AdminRoleEnumerable",
            "src": "contracts/treasury/AdminRoleEnumerable.sol:74"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "1166",
            "type": "t_string_storage",
            "contract": "BankTreasury",
            "src": "contracts/BankTreasury.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)45760_storage)dyn_storage": {
            "label": "struct DataTypes.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]",
            "numberOfBytes": "32000"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(CurrencyType)45526": {
            "label": "enum DataTypes.CurrencyType",
            "members": [
              "ETHER",
              "ERC20",
              "ERC3525"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccountInfo)46000_storage)": {
            "label": "mapping(address => struct DataTypes.AccountInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(ExchangePrice)45733_storage)": {
            "label": "mapping(address => struct DataTypes.ExchangePrice)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48433_storage)": {
            "label": "mapping(bytes32 => struct OZAccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(AccountInfo)46000_storage))": {
            "label": "mapping(uint256 => mapping(address => struct DataTypes.AccountInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccountInfo)46000_storage": {
            "label": "struct DataTypes.AccountInfo",
            "members": [
              {
                "label": "freedBalance",
                "type": "t_uint96",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lockupStartIndex",
                "type": "t_uint32",
                "offset": 12,
                "slot": "0"
              },
              {
                "label": "lockups",
                "type": "t_struct(Lockups)47613_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allowance",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(AddressSet)22993_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)22678_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ExchangePrice)45733_storage": {
            "label": "struct DataTypes.ExchangePrice",
            "members": [
              {
                "label": "currencyAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sbtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Lockups)47613_storage": {
            "label": "struct LockedBalance.Lockups",
            "members": [
              {
                "label": "lockups",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)48433_storage": {
            "label": "struct OZAccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)22993_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)22678_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Transaction)45760_storage": {
            "label": "struct DataTypes.Transaction",
            "members": [
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "currencyType",
                "type": "t_enum(CurrencyType)45526",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "to",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fromTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "toTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "numConfirmations",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "341fe15db0d4c1b3c7e668f57e3afcbe68509f00f8f36520a41806434f1de7be": {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x1b9f74137ed10c86845ca16cd897d778f942b535eb5a891cb94b810f66356a9d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(AddressSet)22993_storage",
            "contract": "AdminControlUpgradeable",
            "src": "@manifoldxyz/libraries-solidity/contracts/access/AdminControlUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_tokenCount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:29"
          },
          {
            "label": "_approveTransferBase",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:32"
          },
          {
            "label": "_extensions",
            "offset": 0,
            "slot": "255",
            "type": "t_struct(AddressSet)22993_storage",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:35"
          },
          {
            "label": "_blacklistedExtensions",
            "offset": 0,
            "slot": "257",
            "type": "t_struct(AddressSet)22993_storage",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:36"
          },
          {
            "label": "_extensionPermissions",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:37"
          },
          {
            "label": "_extensionApproveTransfers",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:38"
          },
          {
            "label": "_tokensExtension",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:41"
          },
          {
            "label": "_extensionBaseURI",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:44"
          },
          {
            "label": "_extensionBaseURIIdentical",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:45"
          },
          {
            "label": "_extensionURIPrefix",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:48"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:51"
          },
          {
            "label": "_extensionRoyalty",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_address,t_array(t_struct(RoyaltyConfig)39959_storage)dyn_storage)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:58"
          },
          {
            "label": "_tokenRoyalty",
            "offset": 0,
            "slot": "267",
            "type": "t_mapping(t_uint256,t_array(t_struct(RoyaltyConfig)39959_storage)dyn_storage)",
            "contract": "CreatorCore",
            "src": "contracts/creatorCore/CreatorCore.sol:59"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "268",
            "type": "t_string_storage",
            "contract": "ERC1155CreatorCore",
            "src": "contracts/creatorCore/ERC1155CreatorCore.sol:23"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "269",
            "type": "t_string_storage",
            "contract": "ERC1155CreatorCore",
            "src": "contracts/creatorCore/ERC1155CreatorCore.sol:24"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "270",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Voucher",
            "src": "contracts/Voucher.sol:67"
          },
          {
            "label": "_userAmountLimit",
            "offset": 0,
            "slot": "271",
            "type": "t_uint256",
            "contract": "Voucher",
            "src": "contracts/Voucher.sol:68"
          },
          {
            "label": "sbt",
            "offset": 0,
            "slot": "272",
            "type": "t_address",
            "contract": "Voucher",
            "src": "contracts/Voucher.sol:70"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "273",
            "type": "t_address",
            "contract": "Voucher",
            "src": "contracts/Voucher.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RoyaltyConfig)39959_storage)dyn_storage": {
            "label": "struct CreatorCore.RoyaltyConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(RoyaltyConfig)39959_storage)dyn_storage)": {
            "label": "mapping(address => struct CreatorCore.RoyaltyConfig[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(RoyaltyConfig)39959_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct CreatorCore.RoyaltyConfig[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)22993_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)22678_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoyaltyConfig)39959_storage": {
            "label": "struct CreatorCore.RoyaltyConfig",
            "members": [
              {
                "label": "receiver",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bps",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)22678_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "23817fd35d8d55979e7b74e732364dddd0c1e64f074beea55d1cd3afa35cec31": {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xa38c74b2a070de3bb092b294f0eb7adf4ffc9905ccfb6b38367a883c382c2f95",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_nextAuctionId",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(Counter)10000_storage",
            "contract": "MarketPlaceStorage",
            "src": "contracts/storage/MarketPlaceStorage.sol:17"
          },
          {
            "label": "sigNonces",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MarketPlaceStorage",
            "src": "contracts/storage/MarketPlaceStorage.sol:19"
          },
          {
            "label": "MODULE_GLOBALS",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "MarketPlaceStorage",
            "src": "contracts/storage/MarketPlaceStorage.sol:21"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(Market)45712_storage)",
            "contract": "MarketPlaceStorage",
            "src": "contracts/storage/MarketPlaceStorage.sol:24"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IBankTreasury)43688",
            "contract": "DNFTMarketCore",
            "src": "contracts/market/DNFTMarketCore.sol:37"
          },
          {
            "label": "nftContractToTokenIdToAuctionId",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "DNFTMarketReserveAuction",
            "src": "contracts/market/DNFTMarketReserveAuction.sol:25"
          },
          {
            "label": "auctionIdToAuction",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(ReserveAuctionStorage)45984_storage)",
            "contract": "DNFTMarketReserveAuction",
            "src": "contracts/market/DNFTMarketReserveAuction.sol:29"
          },
          {
            "label": "DURATION",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "DNFTMarketReserveAuction",
            "src": "contracts/market/DNFTMarketReserveAuction.sol:42"
          },
          {
            "label": "dnftContractToTokenIdToBuyPrice",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(BuyPrice)45865_storage))",
            "contract": "DNFTMarketBuyPrice",
            "src": "contracts/market/DNFTMarketBuyPrice.sol:26"
          },
          {
            "label": "nftContractToIdToOffer",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Offer)45891_storage))",
            "contract": "DNFTMarketOffer",
            "src": "contracts/market/DNFTMarketOffer.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "61",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "62",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)48433_storage)",
            "contract": "OZAccessControlUpgradeable",
            "src": "contracts/libraries/OZAccessControlUpgradeable.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "112",
            "type": "t_array(t_uint256)1000_storage",
            "contract": "AdminRoleEnumerable",
            "src": "contracts/market/AdminRoleEnumerable.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)1000_storage": {
            "label": "uint256[1000]",
            "numberOfBytes": "32000"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IBankTreasury)43688": {
            "label": "contract IBankTreasury",
            "numberOfBytes": "20"
          },
          "t_enum(FeePayType)45522": {
            "label": "enum DataTypes.FeePayType",
            "members": [
              "SELLER_PAY",
              "BUYER_PAY"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(FeeShareType)45519": {
            "label": "enum DataTypes.FeeShareType",
            "members": [
              "LEVEL_TWO",
              "LEVEL_FIVE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(BuyPrice)45865_storage))": {
            "label": "mapping(address => mapping(uint256 => struct DataTypes.BuyPrice))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Offer)45891_storage))": {
            "label": "mapping(address => mapping(uint256 => struct DataTypes.Offer))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Market)45712_storage)": {
            "label": "mapping(address => struct DataTypes.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)48433_storage)": {
            "label": "mapping(bytes32 => struct OZAccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BuyPrice)45865_storage)": {
            "label": "mapping(uint256 => struct DataTypes.BuyPrice)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Offer)45891_storage)": {
            "label": "mapping(uint256 => struct DataTypes.Offer)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ReserveAuctionStorage)45984_storage)": {
            "label": "mapping(uint256 => struct DataTypes.ReserveAuctionStorage)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)22993_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)22678_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BuyPrice)45865_storage": {
            "label": "struct DataTypes.BuyPrice",
            "members": [
              {
                "label": "soulBoundTokenIdSeller",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "derivativeNFT",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "projectId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "publishId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "salePrice",
                "type": "t_uint128",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "units",
                "type": "t_uint128",
                "offset": 16,
                "slot": "7"
              },
              {
                "label": "amount",
                "type": "t_uint96",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)10000_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)45712_storage": {
            "label": "struct DataTypes.Market",
            "members": [
              {
                "label": "isOpen",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "feeShareType",
                "type": "t_enum(FeeShareType)45519",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "feePayType",
                "type": "t_enum(FeePayType)45522",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "royaltySharesPoints",
                "type": "t_uint16",
                "offset": 3,
                "slot": "0"
              },
              {
                "label": "projectId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "collectModule",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Offer)45891_storage": {
            "label": "struct DataTypes.Offer",
            "members": [
              {
                "label": "soulBoundTokenIdBuyer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "buyer",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "derivativeNFT",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publishId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expiration",
                "type": "t_uint32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 4,
                "slot": "4"
              },
              {
                "label": "amount",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "units",
                "type": "t_uint128",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "soulBoundTokenIdReferrer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(ReserveAuctionStorage)45984_storage": {
            "label": "struct DataTypes.ReserveAuctionStorage",
            "members": [
              {
                "label": "soulBoundTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "derivativeNFT",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "projectId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "publishId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "units",
                "type": "t_uint128",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "soulBoundTokenIdReferrer",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "__gap_was_duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "__gap_was_extensionDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "bidder",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "soulBoundTokenIdBidder",
                "type": "t_uint256",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "currency",
                "type": "t_address",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "amount",
                "type": "t_uint96",
                "offset": 0,
                "slot": "15"
              }
            ],
            "numberOfBytes": "512"
          },
          "t_struct(RoleData)48433_storage": {
            "label": "struct OZAccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)22993_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)22678_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}

# Profile record
type Profile @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  creator: Bytes!
  wallet: Bytes!
  nickName: String!
  imageURI: String!
  isRemove: Boolean!
  timestamp: BigInt!
}

#  SBT Transfer history
type SBTTransferHistory @entity {
  id: ID!
  from: Bytes!
  to: Bytes!
  tokenId: BigInt!
  timestamp: BigInt!
}

#  SBT Asset
type SBTAsset @entity {
  id: ID!
  wallet: Bytes!
  soulBoundTokenId: BigInt!
  value: BigInt!
  timestamp: BigInt!
}

#  SBT transfer value history    
type SBTTransferValueHistory @entity {
  id: ID!
  fromSoulBoundTokenId: BigInt!
  toSoulBoundTokenId: BigInt!
  value: BigInt!
  timestamp: BigInt!
} 

#  SBT Slot Changed history    
type SBTSlotChangedHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  oldSlot: BigInt!
  newSlot: BigInt!
  timestamp: BigInt!
} 

# Mint SBTValue history    
type MintSBTValueHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  value: BigInt!
  timestamp: BigInt!
} 
    
# burn SBT history    
type BurnSBTHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  timestamp: BigInt!
}    


# Approval 
type ApprovalRecord @entity {
  id: ID!
  owner: Bytes!
  approved: Bytes!
  tokenId: BigInt!
  timestamp: BigInt!
}    

# ApprovalForAll 
type ApprovalForAllRecord @entity {
  id: ID!
  owner: Bytes!
  operator: Bytes!
  approved: Boolean!
  timestamp: BigInt!
}    

# ApprovalValue 
type ApprovalValueRecord @entity {
  id: ID!
  tokenId: BigInt!
  operator: Bytes!
  value: BigInt!
  timestamp: BigInt!
}    


# derivativeNFT ImageURI Set history    
type DerivativeNFTImageURISetHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  imageURI: String!
  timestamp: BigInt!
}    

# Hub
type Hub @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  creator: Bytes!
  hubId: BigInt!
  name: String!
  description: String!
  imageURI: String!
  timestamp: BigInt!
}

# publication
type Publication @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  hubId: BigInt!
  projectId: BigInt!
  salePrice: BigInt!
  royaltyBasisPoints: BigInt!
  amount: BigInt!
  name: String!
  description: String!
  materialURIs: [String!]!
  fromTokenIds: [BigInt!]!
  collectModule: Bytes!
  collectModuleInitData: Bytes!
  publishModule: Bytes!
  publishModuleInitData: Bytes!
  publishId: BigInt!
  previousPublishId: BigInt!
  publishTaxAmount: BigInt!
  timestamp: BigInt!
}

#  Project and Derivative NFT contract
type Project @entity {
  id: ID!
  projectId: BigInt!
  soulBoundTokenId: BigInt!
  derivativeNFT: Bytes!
  timestamp: BigInt!
}

# Publish Created history
type PublishCreatedHistory @entity {
  id: ID!
  publishId: BigInt!
  soulBoundTokenId: BigInt!
  hubId: BigInt!
  projectId: BigInt!
  newTokenId: BigInt!
  amount: BigInt!
  collectModuleInitData: Bytes!
  timestamp: BigInt!
}

# DerivativeNFT Collected history
type DerivativeNFTCollectedHistory @entity {
  id: ID!
  projectId: BigInt!
  derivativeNFT: Bytes!
  fromSoulBoundTokenId: BigInt!
  toSoulBoundTokenId: BigInt!
  tokenId: BigInt!
  value: BigInt!
  newTokenId: BigInt!
  timestamp: BigInt!
}

# Derivative NFT transfer token history
type DerivativeNFTTransferHistory @entity {
  id: ID!
  fromSoulBoundTokenId: BigInt!
  toSoulBoundTokenId: BigInt!
  projectId: BigInt!
  tokenId: BigInt!
  timestamp: BigInt!
}

# Derivative NFT transfer value history
type DerivativeNFTTransferValueHistory @entity {
  id: ID!
  fromSoulBoundTokenId: BigInt!
  toSoulBoundTokenId: BigInt!
  projectId: BigInt!
  tokenId: BigInt!
  value: BigInt!
  newTokenId: BigInt!
  timestamp: BigInt!
}


# Bank Treasury WithdrawERC3525 history 
type WithdrawERC3525History @entity {
  id: ID!
  fromTokenId: BigInt!
  toTokenId: BigInt!
  value: BigInt!
  timestamp: BigInt!
}

type Transaction @entity {
  id: ID!
  owner: Bytes!
  txIndex: BigInt!
  to: Bytes
  value: BigInt
  data: Bytes
  isConfirmed: Boolean!
  timestamp: BigInt!
}

type ExecuteTransactionHistory @entity {
  id: ID!
  owner: Bytes!
  txIndex: BigInt!
  to: Bytes!
  value: BigInt!
  timestamp: BigInt!
}

type ExchangeVoucherHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  operator: Bytes!
  tokenId: BigInt!
  sbtValue: BigInt!
  timestamp: BigInt!
}

type ExecuteTransactionERC3525History @entity {
  id: ID!
  owner: Bytes!
  txIndex: BigInt!
  fromTokenId: BigInt!
  toTokenId: BigInt!
  value: BigInt!
  timestamp: BigInt!
}

# Voucher NFT
type NFTVoucherHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  account: Bytes!
  vouchType: Int!
  tokenId: BigInt!
  sbtValue: BigInt!
  generateTimestamp: BigInt!
}

#  Voucher Asset
type VoucherAsset @entity {
  id: ID!
  wallet: Bytes!
  tokenId: BigInt!
  value: BigInt!
  timestamp: BigInt!
}

type VoucherRecord @entity {
  id: ID!
  vouchType: Int!
  tokenId: BigInt!
  etherValue: BigInt!
  sbtValue: BigInt!
  generateTimestamp: BigInt!
  endTimestamp: BigInt!
}


# ModuleGlobals
type ProfileCreatorWhitelistedHistory @entity {
  id: ID!
  profileCreator: Bytes!
  whitelisted: Boolean!
  timestamp: BigInt!
}

# FeeCollectModule
type FeesForCollectHistory @entity {
  id: ID!
  ownershipSoulBoundTokenId: BigInt!
  collectorSoulBoundTokenId: BigInt!
  genesisSoulBoundTokenId: BigInt!
  previousSoulBoundTokenId: BigInt!
  publishId: BigInt!
  treasuryAmount: BigInt!
  genesisAmount: BigInt!
  previousAmount: BigInt!
  adjustedAmount: BigInt!
  timestamp: BigInt!
}

# Airdrop history
type DerivativeNFTAirdropedHistory @entity {
  id: ID!
  projectId: BigInt!
  derivativeNFT: Bytes!
  fromSoulBoundTokenId: BigInt!
  tokenId: BigInt!
  toSoulBoundTokenIds: [BigInt!]!
  values: [BigInt!]!
  newTokenIds: [BigInt!]!
  timestamp: BigInt!
}

# Receiver history
type ReceiverReceivedHistory @entity {
  id: ID!
  operator: Bytes!
  fromTokenId: BigInt!
  toTokenId: BigInt!
  value: BigInt!
  data: Bytes
  gas: BigInt!
  timestamp: BigInt!
}

# DispatcherSet history
type DispatcherSetHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  dispatcher: Bytes!
  timestamp: BigInt!
}

# ApprovalForSlot history
type ApprovalForSlotHistory @entity {
  id: ID!
  owner: Bytes!
  slot: BigInt!
  operator: Bytes!
  approved: Boolean!
  timestamp: BigInt!
}

# StateSet history
type StateSetHistory @entity {
  id: ID!
  caller: Bytes!
  prevState: Int!
  newState: Int!
  timestamp: BigInt!
}

# Bank treasury ERC3525Received history
type ERC3525ReceivedHistory @entity {
  id: ID!
  operator: Bytes!
  fromTokenId: BigInt!
  toTokenId: BigInt!
  value: BigInt!
  data: Bytes!
  gas: BigInt!
  timestamp: BigInt!
}

# SBT contract BankTreasurySet history
type BankTreasurySetHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  bankTrerasury: Bytes!
  initialSupply: BigInt!
  timestamp: BigInt!
}

# Manager contract EmergencyAdminSet history
type EmergencyAdminSetHistory @entity {
  id: ID!
  caller: Bytes!
  oldEmergencyAdmin: Bytes!
  newEmergencyAdmin: Bytes!
  timestamp: BigInt!
}

# ModuleGlbals hub creator set whitelist history
type HubCreatorWhitelistedHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  whitelisted: Boolean!
  timestamp: BigInt!
}

# ModuleGlbals Treasury Set history
type ModuleGlobalsTreasurySetHistory @entity {
  id: ID!
  prevTreasury: Bytes!
  newTreasury: Bytes!
  timestamp: BigInt!
}

# ModuleGlbals Voucher Set history
type ModuleGlobalsVoucherSetHistory @entity {
  id: ID!
  prevVoucher: Bytes!
  newVoucher: Bytes!
  timestamp: BigInt!
}

type UserAmountLimitSetHistory @entity {
  id: ID!
  preUserAmountLimit: BigInt!
  userAmountLimit: BigInt!
  timestamp: BigInt!
}

# ModuleGlbals Manager Set history
type ModuleGlobalsManagerSetHistory @entity {
  id: ID!
  prevManager: Bytes!
  newManager: Bytes!
  timestamp: BigInt!
}

# ModuleGlbals SBT Set history
type ModuleGlobalsSBTSetHistory @entity {
  id: ID!
  prevSBT: Bytes!
  newSBT: Bytes!
  timestamp: BigInt!
}

# ModuleGlbals PublishRoyalty Set history
type ModuleGlobalsPublishRoyaltySetHistory @entity {
  id: ID!
  prevPublishRoyalty: BigInt!
  newPublishRoyalty: BigInt!
  timestamp: BigInt!
}

# ModuleGlbals Treasury Fee Set history
type ModuleGlobalsTreasuryFeeSetHistory @entity {
  id: ID!
  prevTreasuryFee: Int!
  newTreasuryFee: Int!
  timestamp: BigInt!
}

# ModuleGlbals Governance Set history
type ModuleGlobalsGovernanceSetHistory @entity {
  id: ID!
  prevGovernance: Bytes!
  newGovernance: Bytes!
  timestamp: BigInt!
}

# CollectModule Whitelisted history
type CollectModuleWhitelistedHistory @entity {
  id: ID!
  collectModule: Bytes!
  whitelisted: Boolean!
  timestamp: BigInt!
}

# PublishModule Whitelisted history
type PublishModuleWhitelistedHistory @entity {
  id: ID!
  publishModule: Bytes!
  whitelisted: Boolean!
  timestamp: BigInt!
}

# Template Whitelisted history
type TemplateWhitelistedHistory @entity {
  id: ID!
  template: Bytes!
  whitelisted: Boolean!
  timestamp: BigInt!
}

# Bank treasury ExchangeSBTByEth history
type ExchangeSBTByEthHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  exchangeWallet: Bytes!
  sbtValue: BigInt!
  timestamp: BigInt!
}

# Bank treasury ExchangeEthBySBTHistory history
type ExchangeEthBySBTHistory @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  toWallet: Bytes!
  sbtValue: BigInt!
  exchangePrice: BigInt!
  ethAmount: BigInt!
  timestamp: BigInt!
}

# Market Place
type Market @entity {
  id: ID!
  derivativeNFT: Bytes!
  feePayType: Int!
  feeShareType: Int!
  royaltyBasisPoints: Int!
  isRemove: Boolean!
  timestamp: BigInt!
}

type MarketPlaceERC3525ReceivedHistory @entity {
  id: ID!
  operator: Bytes!
  fromTokenId: BigInt!
  toTokenId: BigInt!
  value: BigInt!
  data: Bytes
  gas: BigInt!
  timestamp: BigInt!
}


type PublishSaleRecord @entity {
  id: ID!
  soulBoundTokenId: BigInt!
  projectId: BigInt!
  tokenId: BigInt!
  onSellUnits: BigInt!
  saledUnits: BigInt!
  startTime: BigInt!
  preSalePrice: BigInt!
  salePrice: BigInt!
  priceType: Int!
  min: BigInt!
  max: BigInt!
  derivativeNFT: Bytes!
  tokenIdOfMarket: BigInt!
  saleId: BigInt!
  isRemove: Boolean!
  timestamp: BigInt!
}

type TradedHistory @entity {
  id: ID!
  saleId: Int!
  buyer: Bytes!
  tradeId: BigInt!
  tradeTime: BigInt!
  price: BigInt!
  newTokenIdBuyer: BigInt!
  tradedUnits: BigInt!
  treasuryAmount: BigInt!
  genesisAmount: BigInt!
  previousAmount: BigInt!
  adjustedAmount: BigInt!
}